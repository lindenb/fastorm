#macro(javaName $a $b)${a.substring(0,1).toUpperCase()}${a.substring(1)}#end
#macro(packagePath $p)${a.replace('.','/')}#end
#macro(LOGDECL)private static final java.util.logging.Logger LOG = java.util.logging.Logger.getLogger("${model.name}");#end
#macro(getter $f)get#javaName(${f.name})#end
#macro(setter $f)set#javaName(${f.name})#end
#macro(fieldType3 $f)#if(${f.range.dataRange})#if(${f.representedAsPrimitive})${f.range.primitive.primitiveType}#{else}${f.range.primitive.javaClass.name}#end#{else}java.lang.Object#end#end
#macro(fieldType2 $f)#if(${f.range.dataRange})${f.range.primitive.javaClass.name}#{else}java.lang.Object#end#end
#macro(fieldType1 $f)#if(${f.needsList})java.util.List<#fieldType2($f)>#{else}#fieldType3($f)#end#end
#macro(GENERATED)@javax.annotation.Generated(value="FastORM", date="${now}")
#end